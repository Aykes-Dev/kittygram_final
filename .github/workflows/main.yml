name: Kittygramm workflow
on:
  push:
    branches:
      - main

jobs:
  tests_backend:
    name: Тест бэкэнда
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13.10
        env:
          POSTGRES_USER: django_user
          POSTGRES_PASSWORD: django_password
          POSTGRES_DB: django_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
 

    steps:
    - name: Копируем код проекта
      uses: actions/checkout@v3
    - name: Устанавливаем Python
      uses: actions/setup-python@v4
      with: 
        python-version: 3.9
    - name: Обновляем pip, устанавливаем зависимости
      run: |
        python -m pip install --upgrade pip 
        pip install -r backend/requirements.txt
    - name: Тесты flake8 
      run: python -m flake8 .
    - name: Автотесты Pytest
      env:
        POSTGRES_USER: django_user
        POSTGRES_PASSWORD: django_password
        POSTGRES_DB: django_db
        DB_HOST: 127.0.0.1
        DB_PORT: 5432
      run: |
        pytest 
        cd backend
        python manage.py test

  frontend_tests:
    name: Тест фронтенда
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Установка NodeJS
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Установка зависимостей
      run: |
        cd frontend/
        npm ci

    - name: Тест фронтенда
      run: |
        cd frontend/
        npm run test

  build_and_push_to_docker_hub:
    name: Билд и пуш на Docker Hub бэкэнда
    runs-on: ubuntu-latest
    needs: tests_backend
    steps:
      - name: Получение исходного кода из репозитория
        uses: actions/checkout@v3
      - name: Установка сборщика контейнеров Docker
        uses: docker/setup-buildx-action@v2
      - name: Авторизация на Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Билд и пуш образа в Docker Hub
        uses: docker/build-push-action@v4
        with:
          context: ./backend/
          push: true
          tags: aykisdev/kittygram_backend:latest
  
  build_frontend_and_push_to_docker_hub:
    name: Билд и пуш на Docker Hub фронтенда
    runs-on: ubuntu-latest
    needs: frontend_tests
    steps:
      - name: Получение исходного кода из репозитория
        uses: actions/checkout@v3
      - name: Установка сборщика контейнеров Docker
        uses: docker/setup-buildx-action@v2
      - name: Авторизация на Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Билд и пуш образа в Docker Hub
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          push: true
          tags: aykisdev/kittygram_frontend:latest
  
  build_gateway_and_push_to_docker_hub:
    name: Билд и пуш на Docker Hub nginx
    runs-on: ubuntu-latest
    steps:
      - name: Получение исходного кода из репозитория
        uses: actions/checkout@v3
      - name: Установка сборщика контейнеров Docker
        uses: docker/setup-buildx-action@v2
      - name: Авторизация на Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Билд и пуш образа в Docker Hub
        uses: docker/build-push-action@v4
        with:
          context: ./nginx/
          push: true
          tags: aykisdev/taski_gateway:latest 
  
  deploy:
    name: Деплой
    runs-on: ubuntu-latest
    needs: 
      - build_and_push_to_docker_hub
      - build_frontend_and_push_to_docker_hub
      - build_gateway_and_push_to_docker_hub
    steps:
    - name: Получение исходного кода из репозитория
      uses: actions/checkout@v3
    - name: Копируем docker-compose.production.yml на продакшен-сервер
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        source: "docker-compose.yml"
        target: "kittygram"
    - name: Выполнение удаленных ssh-команд для развертывания
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        script: |
          cd kittygram
          sudo docker compose -f docker-compose.yml pull
          sudo docker compose -f docker-compose.yml down
          sudo docker compose -f docker-compose.yml up -d
          sudo docker compose -f docker-compose.yml exec backend python manage.py migrate
          sudo docker compose -f docker-compose.yml exec backend python manage.py collectstatic
          sudo docker compose -f docker-compose.yml exec backend cp -r /app/collected_static/. /backend_static/static/ 