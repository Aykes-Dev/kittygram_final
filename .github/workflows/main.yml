name: Kittygramm workflow
on:
  push:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13.10
        env:
          POSTGRES_USER: django_user
          POSTGRES_PASSWORD: django_password
          POSTGRES_DB: django_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
 

    steps:
    - name: Копируем код проекта
      uses: actions/checkout@v3
    - name: Устанавливаем Python
      uses: actions/setup-python@v4
      with: 
        python-version: 3.9
    - name: Обновляем pip, устанавливаем зависимости
      run: |
        python -m pip install --upgrade pip 
        pip install -r backend/requirements.txt
    - name: Тесты flake8 
      run: python -m flake8 .
    - name: Автотесты Pytest
      env:
        POSTGRES_USER: django_user
        POSTGRES_PASSWORD: django_password
        POSTGRES_DB: django_db
        DB_HOST: 127.0.0.1
        DB_PORT: 5432
      run: |
        pytest 
        cd backend
        python manage.py test

  build_and_push_to_docker_hub:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Получение исходного кода из репозитория
        uses: actions/checkout@v3
      - name: Установка сборщика контейнеров Docker
        uses: docker/setup-buildx-action@v2
      - name: Авторизация на Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Билд и пуш образа в Docker Hub
        uses: docker/build-push-action@v4
        with:
          # Параметр context: ./backend/ указывает, что нужный Dockerfile 
          # находится в ./backend/
          context: ./backend/
          # Параметр push: true указывает, что образ нужно не только собрать,
          # но и отправить на Docker Hub
          push: true
          # В параметре tags задаётся название и тег для образа.
          # Для каждого пересобранного образа 
          # устанавливаем тег latest, чтобы потом
          # на сервере и в docker-compose.yml не указывать версию
          tags: aykisdev/kittygram_backend:latest 